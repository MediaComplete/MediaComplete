<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:controls="clr-namespace:System.Windows.Controls;assembly=TreeViewEx"
        xmlns:customControls="clr-namespace:MSOE.MediaComplete.CustomControls"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:playlists="clr-namespace:MSOE.MediaComplete.Lib.Playlists;assembly=MSOE.MediaComplete.Lib"
    mc:Ignorable="d" x:Class="MSOE.MediaComplete.MainWindow"
        Title="Media Complete" MinHeight="425" Width="695.731" MinWidth="613"
        AutomationProperties.Name="Tree" d:DesignHeight="502.905" Icon="Resources/logo_small.ico">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="MainWindowResources.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Grid Margin="0,0,0,0">
        <Grid.RowDefinitions>
            <RowDefinition Height="24" />
            <RowDefinition Height="24" />
            <RowDefinition Height="1*"/>
            <RowDefinition Height="100" />
            <RowDefinition Height="24"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Menu Style="{DynamicResource MenuStyle}">
                <Menu.Resources>
                    <Style TargetType="MenuItem">
                        <Setter Property="BorderThickness" Value="0"></Setter>
                    </Style>
                </Menu.Resources>
                <MenuItem Header="_File">
                    <MenuItem Header="_Exit" Style="{DynamicResource MenuItemStyle}"/>
                </MenuItem>
                <MenuItem Header="_Edit" Click="MenuItem_Click">
                    <MenuItem.Resources></MenuItem.Resources>
                    <MenuItem Header="_Settings" Style="{DynamicResource MenuItemStyle}"/>
                </MenuItem>
            </Menu>
            <TextBox Text="Search" Height="22" Width="180" HorizontalAlignment="Right"/>
        </Grid>
        <ToolBarTray Grid.Row="1" Style="{DynamicResource ToolBarTrayStyle}">
            <ToolBar Margin="0,0,0,0" Style="{DynamicResource ToolBarStyle}">
                <Button x:Name="AddFile" ToolTip="Add File" VerticalAlignment="Center" Click="AddFile_ClickAsync">
                    <Image Source="{StaticResource Toolbar-AddMusicFile-Icon}" />
                </Button>
                <Button x:Name="AddFolder" ToolTip="Add Folder" VerticalAlignment="Center" Click="AddFolder_ClickAsync">
                    <Image Source="{StaticResource Toolbar-AddMusicFolder-Icon}" />
                </Button>
                <Button x:Name="AutoIdentifyMusic" ToolTip="{StaticResource Toolbar-AutoIdMusic-Tooltip}"
					VerticalAlignment="Center" Click="Toolbar_AutoIDMusic_ClickAsync">
                    <Image Source="{StaticResource Toolbar-AutoIdMusic-Icon}" />
                </Button>
                <Button x:Name="SortMusic" ToolTip="{StaticResource Toolbar-SortMusic-Tooltip}"
                    ToolTipService.ShowOnDisabled='true'
					VerticalAlignment="Center" Click="Toolbar_SortMusic_ClickAsync">
                    <Image Source="{StaticResource Toolbar-SortMusic-Icon}" />
                </Button>
            </ToolBar>
        </ToolBarTray>
        <Grid Grid.Row="2" Style="{DynamicResource GridStyle}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="260*" MinWidth="100"/>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="260*" MinWidth="200"/>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="260*" MinWidth="225" />
            </Grid.ColumnDefinitions>
            <TabControl DockPanel.Dock="Top" Grid.Column="0" BorderThickness="0">
                <TabItem Header="Library" x:Name="LibraryTab">
                    <controls:TreeViewEx x:Name="FolderTree"
				        AutomationProperties.Name="Tree" 
				        MouseUp="FolderTree_OnMouseUp"
				        ItemsSource="{Binding Children}" >
                        <controls:TreeViewEx.ItemTemplate>
                            <HierarchicalDataTemplate ItemsSource="{Binding Children}"  DataType="{x:Type customControls:FolderTreeViewItem}">
                                <TextBlock Text="{Binding}"/>
                            </HierarchicalDataTemplate>
                        </controls:TreeViewEx.ItemTemplate>
                    </controls:TreeViewEx>
                </TabItem>
                <TabItem Header="Playlists" x:Name="PlaylistTab">
                    <TreeView Name="PlaylistTree">
                        <TreeView.ItemTemplate>
                            <HierarchicalDataTemplate >
                                <HierarchicalDataTemplate.DataType>
                                    <x:Type TypeName="playlists:Playlist" />
                                </HierarchicalDataTemplate.DataType>
                                <Border BorderThickness="2">
                                    <TextBlock Text="{Binding Name}"/>
                                </Border>
                            </HierarchicalDataTemplate>
                        </TreeView.ItemTemplate>
                        <TreeView.Resources>
                            <SolidColorBrush Color="{DynamicResource PlaylistTreeViewItemSelectedColor}" x:Key="{x:Static SystemColors.HighlightBrushKey}"/>
                        </TreeView.Resources>
                        <TreeView.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="{StaticResource ContextMenu-AddNewPlaylist-Header}" Click="ContextMenu_AddNewPlaylist_Click"></MenuItem>
                            </ContextMenu>
                        </TreeView.ContextMenu>
                    </TreeView>
                </TabItem>
            </TabControl>
            <GridSplitter Grid.Column="1" 
              HorizontalAlignment="Center" 
              VerticalAlignment="Stretch"
              ShowsPreview="true"
              Width="3"
              Style="{DynamicResource SplitterStyle}"/>
            <controls:TreeViewEx x:Name="SongTree" Grid.Column="2" Margin="0,0,0,0" 
				AutomationProperties.Name="Tree" 
				ItemsSource="{Binding}" 
                MouseUp="SongTree_OnMouseUp" MouseDoubleClick="SongTree_OnMouseDoubleClick">
                <controls:TreeViewEx.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding}"  DataType="{x:Type customControls:SongTreeViewItem}">
                        <TextBlock Text="{Binding}"/>
                    </HierarchicalDataTemplate>
                </controls:TreeViewEx.ItemTemplate>
                <controls:TreeViewEx.ContextMenu>
                    <ContextMenu StaysOpen="True">
                        <MenuItem Header="{StaticResource ContextMenu-PlayMusic-Header}"
							Click="ContextMenu_PlayMusic_Click" />
                        <MenuItem Header="{StaticResource ContextMenu-AutoIdMusic-Header}"
							Click="ContextMenu_AutoIDMusic_ClickAsync" />
                    </ContextMenu>
                </controls:TreeViewEx.ContextMenu>
            </controls:TreeViewEx>
            <GridSplitter Grid.Column="3" 
              HorizontalAlignment="Center" 
              VerticalAlignment="Stretch"
              ShowsPreview="true"
              Width="3"
              Style="{DynamicResource SplitterStyle}"/>
            <Border Grid.Column="4" BorderThickness="1" Height="Auto" Style="{DynamicResource BorderStyle}">
                <DockPanel Height="Auto">
                    <Grid Margin="0,0,0,0"  Height="Auto" Style="{DynamicResource DetailGridStyle}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="100" />
                            <ColumnDefinition Width="35" />
                            <ColumnDefinition Width="35"/>
                            <ColumnDefinition Width="84*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="26"/>
                            <RowDefinition Height="26"/>
                            <RowDefinition Height="26"/>
                            <RowDefinition Height="26"/>
                            <RowDefinition Height="26"/>
                            <RowDefinition Height="26"/>
                            <RowDefinition Height="26"/>
                            <RowDefinition Height="1*"/>
                            <RowDefinition Height="26"/>
                        </Grid.RowDefinitions>
                        <Label Grid.Column="0" Grid.Row="0" Content="Song Title" />
                        <TextBox Name="SongTitle" IsReadOnly="True" Grid.Column="1" Grid.Row="0" Grid.ColumnSpan="3" TextChanged="TextChanged"/>

                        <Label Grid.Column="0" Grid.Row="1" Content="Album" />
                        <TextBox Name="Album"  IsReadOnly="True" Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="3" TextChanged="TextChanged"/>

                        <Label Grid.Column="0" Grid.Row="2" Content="Artist" />
                        <TextBox Name="Artist" IsReadOnly="True" Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="3" TextChanged="TextChanged"/>

                        <Label Grid.Column="0" Grid.Row="3" Content="Supporting Artist" />
                        <TextBox Name="SuppArtist" IsReadOnly="True" Grid.Column="1" Grid.Row="3" Grid.ColumnSpan="3" TextChanged="TextChanged"/>

                        <Label Grid.Column="0" Grid.Row="4" Content="Genre" />
                        <TextBox Name="Genre" IsReadOnly="True" Grid.Column="1" Grid.Row="4" Grid.ColumnSpan="3" TextChanged="TextChanged"/>

                        <Label Grid.Column="0" Grid.Row="5" Content="Track Number" />
                        <TextBox Name="Track" IsReadOnly="True" Grid.Column="1" Grid.Row="5" TextChanged="TextChanged" HorizontalAlignment="Left" Width="35"/>

                        <Label Grid.Column="2" Grid.Row="5" Content="Year"/>
                        <TextBox Name="Year" IsReadOnly="True" Grid.Column="3" Grid.Row="5" TextChanged="TextChanged"/>

                        <Label Grid.Column="0" Grid.Row="6"  Content="Rating" />
                        <TextBox Name="Rating" IsReadOnly="True" Grid.Column="1" Grid.Row="6" Grid.ColumnSpan="3" TextChanged="TextChanged"/>
                        <Grid Grid.Row="7" Grid.ColumnSpan="4" Grid.Column="0" Grid.RowSpan="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="14*"/>
                                <ColumnDefinition Width="110"/>
                                <ColumnDefinition Width="5"/>
                                <ColumnDefinition Width="110"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="26"/>
                            </Grid.RowDefinitions>
                            <Button Name="EditCancelButton" Content="Edit" Grid.Column="1" Grid.Row="1" Click="Edit_OnClick"/>
                            <Button Content="Save" Grid.Column="3" Grid.Row="1" Click="Save_OnClick"/>
                        </Grid>
                    </Grid>
                </DockPanel>
            </Border>
        </Grid>

        <StackPanel Grid.Row="3" Grid.Column="0" Style="{DynamicResource PanelStyle}">
            <Slider />
            <Grid>
                <StackPanel Height="75" Orientation="Horizontal" HorizontalAlignment="Center">
                    <Button Name="PreviousButton" Height="60" Width="60" Style="{DynamicResource PreviousButton}" Click="PreviousButton_OnClick"/>
                    <Button Name="PlayPauseButton" Height="75" Width="75" Click="PlayPauseButton_OnClick"/>
                    <Button Name="SkipButton" Height="60" Width="60" Style="{DynamicResource SkipButton}" Click="SkipButton_OnClick"/>
                    <Button Name="StopButton" Height="40" Width="40" Style="{DynamicResource StopButton}" Click="StopButton_OnClick"/>
                    <customControls:BackgroundYoutubePlayer></customControls:BackgroundYoutubePlayer>
                </StackPanel>
                <Slider Name="VolumeSlider" IsMoveToPointEnabled="True" Width="134" Value="50" Maximum="200" Height="34" HorizontalAlignment="Right" ValueChanged="VolumeSlider_OnValueChanged" Margin="0,0,20,0">
                    <Slider.Template>
                        <ControlTemplate TargetType="{x:Type Slider}">
                            <Grid>
                                <Grid.Resources>
                                    <Style x:Key="SeekValueFill" TargetType="{x:Type RepeatButton}">
                                        <Setter Property="OverridesDefaultStyle" Value="true"/>
                                        <Setter Property="IsTabStop" Value="false"/>
                                        <Setter Property="Focusable" Value="false"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                    <Rectangle Fill="Transparent"></Rectangle>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                    <Style x:Key="SeekRightFill" TargetType="{x:Type RepeatButton}">
                                        <Setter Property="OverridesDefaultStyle" Value="true"/>
                                        <Setter Property="IsTabStop" Value="false"/>
                                        <Setter Property="Focusable" Value="false"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                    <Rectangle Fill="Black" Opacity="0.5"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Grid.Resources>

                                <Grid.Clip>
                                    <PathGeometry>
                                        <PathFigure StartPoint="0 34" IsClosed="True">
                                            <LineSegment Point="134 34" />
                                            <LineSegment Point="134 0" />
                                        </PathFigure>
                                    </PathGeometry>
                                </Grid.Clip>

                                <Rectangle Style="{DynamicResource VolumeFillColor}" />

                                <Track x:Name="PART_Track">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource SeekValueFill}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SeekRightFill}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb x:Name="Thumb" Width="10" Foreground="Black" Background="Black" BorderThickness="0" Margin="0" Padding="0">
                                            <Thumb.Style>
                                                <Style TargetType="Thumb">
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="Thumb">
                                                                <Rectangle Cursor="Hand" Style="{DynamicResource VolumeBarColor}" />
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Thumb.Style>
                                        </Thumb>
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Slider.Template>
                </Slider>
                <Label Name="VolumePercentLabel" Content="{Binding ElementName=VolumeSlider, Path=Value, Converter={StaticResource VolumeConverter}}" HorizontalAlignment="Right" Margin="0,22,101,10" VerticalAlignment="Top"/>
            </Grid>
        </StackPanel>
        <StackPanel Grid.Row="4" Grid.Column="0" Height="22">
            <StatusBar Style="{DynamicResource StatusBarStyle}">
                <StatusBar.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                        </Grid>
                    </ItemsPanelTemplate>
                </StatusBar.ItemsPanel>
                <StatusBarItem Grid.Column="1" Style="{DynamicResource StatusBarItemStyle}">
                    <TextBlock x:Name="StatusMessage"/>
                </StatusBarItem>
                <StatusBarItem Grid.Column="2">
                    <Image x:Name="StatusIcon"/>
                </StatusBarItem>
            </StatusBar>
        </StackPanel>
    </Grid>
</Window>
