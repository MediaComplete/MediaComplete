<customWindow:BaseWindow
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:customWindow="clr-namespace:MSOE.MediaComplete.CustomWindow"
        xmlns:controls="clr-namespace:System.Windows.Controls;assembly=MultiSelectTreeView"
        mc:Ignorable="d" x:Class="MSOE.MediaComplete.MainWindow"
        Title="Media Complete" MinHeight="425" MinWidth="613" Icon="Resources/logo_small.ico"
        DataContext="{Binding RelativeSource={RelativeSource Self}}">
        <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="MainWindowResources.xaml" />
                <ResourceDictionary Source="layout/Styles.xaml" />
                <ResourceDictionary Source="layout/PlayerControlStyles.xaml" />
                <ResourceDictionary Source="layout/MainFrameStyles.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="24" />
            <RowDefinition Height="1*"/>
            <RowDefinition Height="3" />
            <RowDefinition Height="105" />
            <RowDefinition Height="24" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <DockPanel Grid.Row="0" ZIndex="10" Style="{DynamicResource ToolBarPanelStyle}" >
            <ToggleButton VerticalAlignment="Bottom" DockPanel.Dock="Right" x:Name="HideMetadata"
                          ToolTip="{StaticResource Toolbar-HideDetails-Content}"
                          Style="{StaticResource ShowHideDetailsButtonStyle}" />
            <DockPanel HorizontalAlignment="Stretch" LastChildFill="False">
                <Button ToolTip="{StaticResource Toolbar-AddFile-Tooltip}" DockPanel.Dock="Left"
                        Style="{DynamicResource ToolbarImportFile}" Click="AddFile_ClickAsync" />
                <Button ToolTip="{StaticResource Toolbar-AddFolder-Tooltip}" DockPanel.Dock="Left"
                        Style="{DynamicResource ToolbarImportFolder}" Click="AddFolder_ClickAsync" />
                <Button ToolTip="{StaticResource Toolbar-AutoIdMusic-Tooltip}" DockPanel.Dock="Left"
                        Style="{DynamicResource ToolbarPopulateMetadata}" Click="Toolbar_AutoIDMusic_ClickAsync" />
                <Button ToolTip="{StaticResource Toolbar-SortMusic-Tooltip}" DockPanel.Dock="Left"
					    Style="{StaticResource ToolbarSort}" Click="Toolbar_SortMusic_ClickAsync"/>
                <Button DockPanel.Dock="Left" Click="ToolbarSettings_Click"
					    Style="{StaticResource ToolbarSettings}" />
            </DockPanel>
        </DockPanel>
        <Grid Grid.Row="1" Style="{DynamicResource GridStyle}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="260*" MinWidth="100" />
                <ColumnDefinition Width="3" />
                <ColumnDefinition Width="260*" MinWidth="200" />
                <ColumnDefinition Width="3" />
                <ColumnDefinition x:Name="MetadataColumn" Width="260*" MinWidth="225" />
            </Grid.ColumnDefinitions>
            <TabControl Name="LeftFrameTabControl" DockPanel.Dock="Top" Grid.Column="0"
                        Margin="0,0,0,-2" BorderThickness="0"
                        SelectionChanged="LeftFrame_SelectionChanged">
                <TabItem Header="Library" x:Name="LibraryTab">
                    <controls:MultiSelectTreeView x:Name="FolderTree" DataContext="{Binding RootLibraryFolderItem}"
                                                  ItemsSource="{Binding Children}" Style="{StaticResource MultiSelectTreeViewCustom}"
                                                  MouseUp="FolderTree_OnMouseUp" MouseDoubleClick="FolderTree_DoubleClick">
                        <controls:MultiSelectTreeView.ItemContainerStyle>
                            <Style TargetType="{x:Type controls:MultiSelectTreeViewItem}"
                                   BasedOn="{StaticResource MultiSelectTreeViewItemCustom}">
                                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                            </Style>
                        </controls:MultiSelectTreeView.ItemContainerStyle>
                        <controls:MultiSelectTreeView.ContextMenu>
                            <ContextMenu StaysOpen="True">
                                <MenuItem Header="{StaticResource ContextMenu-PlayMusic-Header}"
                                          Click="ContextMenu_PlayFolderMusic_Click" />
                                <MenuItem Header="{StaticResource ContextMenu-AddTo-Header}">
                                    <MenuItem.ItemsSource>
                                        <CompositeCollection>
                                            <MenuItem Header="{StaticResource ContextMenu-NowPlayingMusic-Header}"
                                                      Click="ContextMenu_AddFolderToNowPlaying_Click" />
                                            <MenuItem Header="{StaticResource ContextMenu-NewPlaylist-Header}"
                                                      Click="ContextMenu_AddFoldersToNewPlaylist_Click" />
                                            <Separator
                                                Visibility="{Binding Playlists.Count, Converter={StaticResource IfZeroCollapsed}}" />
                                            <CollectionContainer
                                                Collection="{Binding Source={StaticResource PlaylistsCollection}}" />
                                        </CompositeCollection>
                                    </MenuItem.ItemsSource>
                                    <MenuItem.ItemContainerStyle>
                                        <Style TargetType="MenuItem">
                                            <Setter Property="Header" Value="{Binding}" />
                                            <EventSetter Event="Click" Handler="ContextMenu_AddFoldersToPlaylist_Click" />
                                        </Style>
                                    </MenuItem.ItemContainerStyle>
                                </MenuItem>
                            </ContextMenu>
                        </controls:MultiSelectTreeView.ContextMenu>
                    </controls:MultiSelectTreeView>
                </TabItem>

                <TabItem Header="Playlists" Name="PlaylistTab">
                    <TreeView x:Name="PlaylistTree"
                              SelectedItemChanged="PlaylistTree_SelectionChanged">
                        <TreeView.ItemsSource>
                            <CompositeCollection>
                                <TreeViewItem Name="NowPlayingList" Header="{StaticResource NowPlaying}" />
                                <CollectionContainer Collection="{Binding Source={StaticResource PlaylistsCollection}}" />
                            </CompositeCollection>
                        </TreeView.ItemsSource>
                    </TreeView>
                </TabItem>
                <TabItem Header="Search" x:Name="SearchTab">
                    <TextBox Text="Search" Height="22" VerticalAlignment="Top" HorizontalAlignment="Stretch" />
                </TabItem>
            </TabControl>

            <GridSplitter Grid.Column="1" Style="{DynamicResource SplitterStyle}" />
            <ScrollViewer Grid.Column="2" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"
                            Grid.ColumnSpan="{Binding ElementName=HideMetadata, Path=IsChecked, Converter={StaticResource ExpandWhenChecked}}"
                            Visibility="{Binding IsSelected, ElementName=LibraryTab, Converter={StaticResource BoolToVis}}">
                <ListView SelectionMode="Extended" Style="{StaticResource ExternalScrollView}"
                          Visibility="{Binding ElementName=LibraryTab, Path=IsSelected, Converter={StaticResource BoolToVis}}"
                          ItemsSource="{Binding Songs.View}" MouseDoubleClick="SongList_OnMouseDoubleClick"
                          SelectionChanged="SongList_OnSelectionChanged">
                    <ListView.ContextMenu>
                        <ContextMenu StaysOpen="True">
                            <MenuItem Header="{StaticResource ContextMenu-PlayMusic-Header}"
                                      Click="ContextMenu_PlaySongMusic_Click" />
                            <MenuItem Header="{StaticResource ContextMenu-PlaySingle-Header}"
                                      Click="ContextMenu_PlaySelectedSongs_Click" />
                            <MenuItem Header="{StaticResource ContextMenu-PlayNext-Header}"
                                      Click="ContextMenu_PlaySongNext_Click" />
                            <MenuItem Header="{StaticResource ContextMenu-AddTo-Header}">
                                <MenuItem.ItemsSource>
                                    <CompositeCollection>
                                        <MenuItem Header="{StaticResource ContextMenu-NowPlayingMusic-Header}"
                                                  Click="ContextMenu_AddSongToNowPlaying_Click" />
                                        <MenuItem Header="{StaticResource ContextMenu-NewPlaylist-Header}"
                                                  Click="ContextMenu_AddSongsToNewPlaylist_Click" />
                                        <Separator
                                            Visibility="{Binding Playlists.Count, Converter={StaticResource IfZeroCollapsed}}" />
                                        <CollectionContainer
                                            Collection="{Binding Source={StaticResource PlaylistsCollection}}" />
                                    </CompositeCollection>
                                </MenuItem.ItemsSource>
                                <MenuItem.ItemContainerStyle>
                                    <Style TargetType="MenuItem">
                                        <Setter Property="Header" Value="{Binding}" />
                                        <EventSetter Event="Click" Handler="ContextMenu_AddSongsToPlaylist_Click" />
                                    </Style>
                                </MenuItem.ItemContainerStyle>
                            </MenuItem>
                            <MenuItem Header="{StaticResource ContextMenu-AutoIdMusic-Header}"
                                      Click="ContextMenu_AutoIDMusic_ClickAsync" />
                        </ContextMenu>
                    </ListView.ContextMenu>
                </ListView>
            </ScrollViewer>
            <Grid Grid.Column="2"
                  Visibility="{Binding ElementName=PlaylistTab, Path=IsSelected, Converter={StaticResource BoolToVis}}"
                  Grid.ColumnSpan="{Binding ElementName=HideMetadata, Path=IsChecked, Converter={StaticResource ExpandWhenChecked}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="26" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <DockPanel Grid.Row="0" LastChildFill="True">
                    <Label Margin="-4" FontSize="15" FontWeight="ExtraBlack"
                           Content="{Binding ElementName=PlaylistTree, Path=SelectedItem.Header}"
                           Visibility="{Binding IsSelected, ElementName=NowPlayingItem, Converter={StaticResource BoolToVis}}" />
                    <Button Click="SaveAsPlaylist_OnClick" ToolTip="{StaticResource SaveNowPlaying-Tooltip}"
                            Visibility="{Binding ElementName=NowPlayingItem, Path=IsSelected, Converter={StaticResource BoolToVis}}"
                            Style="{StaticResource SaveButtonStyle}"
                            IsEnabled="{Binding NowPlayingDirty.Value}"
                            DockPanel.Dock="Right"
                            VerticalAlignment="Center" />
                    <TextBox VerticalAlignment="Center" DockPanel.Dock="Left" FontSize="14" FontWeight="ExtraBlack"
                             Text="{Binding ElementName=PlaylistTree, Path=SelectedItem.Title}"
                             Style="{StaticResource PlaylistNameTextbox}"
                             Visibility="{Binding IsSelected, ElementName=NowPlayingItem, Converter={StaticResource NotBoolToVis}}" />
                </DockPanel>
                <ScrollViewer Grid.Row="1" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                    <ListView Name="PlaylistSongList" BorderThickness="1,0,0,0" Style="{StaticResource ExternalScrollView}"
                              ItemsSource="{Binding PlaylistSongs.View}"
                              SelectionChanged="SongList_OnSelectionChanged"
                              MouseDoubleClick="PlaylistSongs_OnMouseDoubleClick">
                    </ListView>
                </ScrollViewer>
            </Grid>
            <GridSplitter Style="{DynamicResource SplitterStyle}" Grid.Column="3"
                          Visibility="{Binding ElementName=HideMetadata, Path=IsChecked, Converter={StaticResource NotBoolToVis}}"/>
            <DockPanel Height="Auto" x:Name="MetadataPanel" Grid.Column="4"
                           Visibility="{Binding ElementName=HideMetadata, Path=IsChecked, Converter={StaticResource NotBoolToVis}}">
                <Grid Height="Auto" Style="{DynamicResource GridStyle}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100" />
                        <ColumnDefinition Width="35" />
                        <ColumnDefinition Width="35" />
                        <ColumnDefinition Width="84*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="26" />
                        <RowDefinition Height="26" />
                        <RowDefinition Height="26" />
                        <RowDefinition Height="26" />
                        <RowDefinition Height="26" />
                        <RowDefinition Height="26" />
                        <RowDefinition Height="26" />
                        <RowDefinition Height="1*" />
                        <RowDefinition Height="26" />
                    </Grid.RowDefinitions>
                    <Label Grid.Column="0" Grid.Row="0" Content="Song Title" />
                    <TextBox Name="SongTitle" IsReadOnly="True" Grid.Column="1" Grid.Row="0" Grid.ColumnSpan="3"
                                 TextChanged="TextChanged" />

                    <Label Grid.Column="0" Grid.Row="1" Content="Album" />
                    <TextBox Name="Album" IsReadOnly="True" Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="3"
                                 TextChanged="TextChanged" />

                    <Label Grid.Column="0" Grid.Row="2" Content="Artist" />
                    <TextBox Name="Artist" IsReadOnly="True" Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="3"
                                 TextChanged="TextChanged" />

                    <Label Grid.Column="0" Grid.Row="3" Content="Supporting Artist" />
                    <TextBox Name="SuppArtist" IsReadOnly="True" Grid.Column="1" Grid.Row="3" Grid.ColumnSpan="3"
                                 TextChanged="TextChanged" />

                    <Label Grid.Column="0" Grid.Row="4" Content="Genre" />
                    <TextBox Name="Genre" IsReadOnly="True" Grid.Column="1" Grid.Row="4" Grid.ColumnSpan="3"
                                 TextChanged="TextChanged" />

                    <Label Grid.Column="0" Grid.Row="5" Content="Track Number" />
                    <TextBox Name="Track" IsReadOnly="True" Grid.Column="1" Grid.Row="5" TextChanged="TextChanged"
                                 HorizontalAlignment="Left" Width="35" />

                    <Label Grid.Column="2" Grid.Row="5" Content="Year" />
                    <TextBox Name="Year" IsReadOnly="True" Grid.Column="3" Grid.Row="5" TextChanged="TextChanged" />

                    <Label Grid.Column="0" Grid.Row="6" Content="Rating" />
                    <TextBox Name="Rating" IsReadOnly="True" Grid.Column="1" Grid.Row="6" Grid.ColumnSpan="3"
                                 TextChanged="TextChanged" />
                    <Grid Grid.Row="7" Grid.ColumnSpan="4" Grid.Column="0" Grid.RowSpan="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="14*" />
                            <ColumnDefinition Width="110" />
                            <ColumnDefinition Width="5" />
                            <ColumnDefinition Width="110" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="1*" />
                            <RowDefinition Height="26" />
                        </Grid.RowDefinitions>
                        <Button Name="EditCancelButton" Content="Edit" Grid.Column="1" Grid.Row="1"
                                    Click="Edit_OnClick" />
                        <Button Content="Save" Grid.Column="3" Grid.Row="1" Click="Save_OnClick" />
                    </Grid>
                </Grid>
            </DockPanel>
        </Grid>
        <GridSplitter Grid.Row="2" Style="{DynamicResource SplitterStyle}" IsEnabled="False"/>
        <StackPanel Grid.Row="3" Grid.Column="0" Style="{DynamicResource PanelStyle}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="578*"/>
                    <ColumnDefinition Width="60"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="23"/>
                </Grid.RowDefinitions>
                <Label Grid.Column="0" Name="CurrentTimeLabel" Content="00:00"/>
                <Slider Name="TrackBar" Margin="0,3,0,0"  Cursor="Cross" Style ="{DynamicResource HorizontalSlider}" Grid.Column="1" Minimum="0" Maximum="100" IsMoveToPointEnabled="True" ValueChanged="TrackBar_OnValueChanged" PreviewMouseDown="Thumb_MouseDown" PreviewMouseUp="Thumb_MouseUp"/>
                <Label Grid.Column="2" Name="RemainingTimeLabel" HorizontalContentAlignment="Right" Content="-00:00"/>
            </Grid>
            <Grid>
                <StackPanel Height="75" Orientation="Horizontal" HorizontalAlignment="Center" Margin="10,0,0,0" >
                    <Grid VerticalAlignment="Center">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="30"/>
                        </Grid.RowDefinitions>
                        <Button x:Name="LoopButton" Height="30" Width="30" Style="{DynamicResource LoopButtonUnPressed}" Click="LoopButton_OnClick" Grid.Row="0"/>
                        <Button x:Name="LoopButtonPressed" Height="30" Width="30" Style="{DynamicResource LoopButtonPressed}" Click="LoopButton_OnClick" Grid.Row="0" Visibility="Hidden"/>
                        <Button x:Name="LoopButtonOne" Height="30" Width="30" Style="{DynamicResource LoopOneButton}" Click="LoopButton_OnClick" Grid.Row="0" Visibility="Hidden"/>
                        <Button x:Name="ShuffleButton" Height="30" Width="30" Style="{DynamicResource ShuffleButton}" Grid.Row="1"/>
                    </Grid>
                    <Button x:Name="PreviousButton" Height="60" Width="60" Style="{DynamicResource PreviousButton}" Click="PreviousButton_OnClick"/>
                    <Button x:Name="PlayPauseButton" Height="75" Width="75" Click="PlayPauseButton_OnClick"/>
                    <Button x:Name="SkipButton" Height="60" Width="60" Style="{DynamicResource SkipButton}" Click="SkipButton_OnClick"/>
                    <Button x:Name="StopButton" Height="40" Width="40" Style="{DynamicResource StopButton}" Click="StopButton_OnClick"/>
                </StackPanel>
                <Slider Name="VolumeSlider" IsMoveToPointEnabled="True" Width="134" Value="50" Maximum="200" Height="34" HorizontalAlignment="Right" ValueChanged="VolumeSlider_OnValueChanged" Margin="0,0,20,0">
                    <Slider.Template>
                        <ControlTemplate TargetType="{x:Type Slider}">
                            <Grid>
                                <Grid.Resources>
                                    <Style x:Key="SeekValueFill" TargetType="{x:Type RepeatButton}">
                                        <Setter Property="OverridesDefaultStyle" Value="true"/>
                                        <Setter Property="IsTabStop" Value="false"/>
                                        <Setter Property="Focusable" Value="false"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                    <Rectangle Fill="Transparent"></Rectangle>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                    <Style x:Key="SeekRightFill" TargetType="{x:Type RepeatButton}">
                                        <Setter Property="OverridesDefaultStyle" Value="true"/>
                                        <Setter Property="IsTabStop" Value="false"/>
                                        <Setter Property="Focusable" Value="false"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                    <Rectangle Fill="Black" Opacity="0.5"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Grid.Resources>

                                    <Grid.Clip>
                                        <PathGeometry>
                                            <PathFigure StartPoint="0 34" IsClosed="True">
                                                <LineSegment Point="134 34" />
                                                <LineSegment Point="134 0" />
                                            </PathFigure>
                                        </PathGeometry>
                                    </Grid.Clip>

                                <Rectangle Style="{DynamicResource VolumeFillColor}" />
                                <Track x:Name="PART_Track">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource SeekValueFill}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SeekRightFill}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb x:Name="Thumb" Width="10" Foreground="Black" Background="Black" BorderThickness="0" Margin="0" Padding="0">
                                            <Thumb.Style>
                                                <Style TargetType="Thumb">
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="Thumb">
                                                                <Rectangle Cursor="Hand" Style="{DynamicResource VolumeBarColor}" />
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Thumb.Style>
                                        </Thumb>
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Slider.Template>
                </Slider>
                <Label Name="VolumePercentLabel" Content="{Binding ElementName=VolumeSlider, Path=Value, Converter={StaticResource VolumeConverter}}" HorizontalAlignment="Right" Margin="0,22,101,10" VerticalAlignment="Top"/>
            </Grid>
        </StackPanel>
        <StackPanel Grid.Row="4" Grid.Column="0" Height="22">
            <StatusBar Style="{DynamicResource StatusBarStyle}">
                <StatusBar.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                        </Grid>
                    </ItemsPanelTemplate>
                </StatusBar.ItemsPanel>
                <StatusBarItem Grid.Column="1" Style="{DynamicResource StatusBarItemStyle}">
                    <TextBlock x:Name="StatusMessage" />
                </StatusBarItem>
                <StatusBarItem Grid.Column="2">
                    <Image x:Name="StatusIcon" />
                </StatusBarItem>
            </StatusBar>
        </StackPanel>
    </Grid>
</customWindow:BaseWindow>
